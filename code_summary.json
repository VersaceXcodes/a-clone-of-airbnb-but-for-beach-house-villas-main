{
  "tech_stack": [
    "React",
    "TypeScript",
    "Vite",
    "Express.js",
    "Node.js",
    "PostgreSQL",
    "Socket.IO",
    "Tailwind CSS",
    "Zustand",
    "React Query",
    "React Router",
    "Zod",
    "JWT",
    "bcryptjs"
  ],
  "features": [
    {
      "name": "User Authentication",
      "description": "Complete user signup, login, logout, and session management with JWT tokens",
      "files": [
        "src/components/views/UV_GuestLogin.tsx",
        "src/components/views/UV_GuestSignup.tsx",
        "src/components/views/UV_HostSignup.tsx",
        "src/components/views/UV_PasswordReset.tsx",
        "backend/server.ts (auth routes)"
      ]
    },
    {
      "name": "Villa Management",
      "description": "Full CRUD operations for villa listings with photos, amenities, pricing, and availability",
      "files": [
        "src/components/views/UV_HostOnboardingWizard.tsx",
        "src/components/views/UV_HostVillaDetail.tsx",
        "src/components/views/UV_VillaDetails.tsx",
        "backend/server.ts (villa routes)"
      ]
    },
    {
      "name": "Search and Discovery",
      "description": "Villa search with filters, location-based results, and featured listings",
      "files": [
        "src/components/views/UV_Homepage.tsx",
        "src/components/views/UV_SearchResults.tsx",
        "src/components/views/GV_TopNav.tsx",
        "backend/server.ts (search routes)"
      ]
    },
    {
      "name": "Booking System",
      "description": "Complete booking flow with availability checking, pricing calculation, and payment processing",
      "files": [
        "src/components/views/UV_BookingStart.tsx",
        "src/components/views/UV_BookingConfirmation.tsx",
        "src/components/views/UV_BookingFailure.tsx",
        "src/components/views/UV_ReservationDetail.tsx",
        "backend/server.ts (booking routes)"
      ]
    },
    {
      "name": "User Dashboards",
      "description": "Separate dashboards for guests and hosts with personalized content and management tools",
      "files": [
        "src/components/views/UV_GuestDashboard.tsx",
        "src/components/views/UV_HostDashboard.tsx",
        "src/components/views/UV_HostReservations.tsx",
        "src/components/views/UV_MyTrips.tsx"
      ]
    },
    {
      "name": "Messaging System",
      "description": "Real-time messaging between guests and hosts with thread management",
      "files": [
        "src/components/views/UV_MessagingInbox.tsx",
        "src/components/views/UV_MessagingThread.tsx",
        "backend/server.ts (messaging routes and socket.io)"
      ]
    },
    {
      "name": "Review System",
      "description": "Bidirectional review system allowing guests to review villas and hosts to review guests",
      "files": [
        "src/components/views/UV_LeaveReview.tsx",
        "src/components/views/UV_ReviewEdit.tsx",
        "backend/server.ts (review routes)"
      ]
    },
    {
      "name": "Wishlist Management",
      "description": "Multiple wishlist support with CRUD operations for saving favorite villas",
      "files": [
        "src/components/views/UV_Wishlists.tsx",
        "backend/server.ts (wishlist routes)"
      ]
    },
    {
      "name": "Profile Management",
      "description": "User profile editing for both guests and hosts with photo upload and bio management",
      "files": [
        "src/components/views/UV_GuestProfileEdit.tsx",
        "src/components/views/UV_HostProfileEdit.tsx",
        "backend/server.ts (profile routes)"
      ]
    },
    {
      "name": "Real-time Notifications",
      "description": "Socket.IO powered real-time notifications for bookings, messages, and system updates",
      "files": [
        "src/components/views/GV_NotificationBar.tsx",
        "src/store/main.tsx (socket management)",
        "backend/server.ts (socket.io setup)"
      ]
    },
    {
      "name": "State Management",
      "description": "Zustand-based global state management with persistence for user sessions, search, and app data",
      "files": ["src/store/main.tsx", "src/stores/userSession.ts"]
    },
    {
      "name": "Navigation and Routing",
      "description": "React Router based SPA navigation with protected routes and authentication guards",
      "files": [
        "src/App.tsx",
        "src/components/views/GV_TopNav.tsx",
        "src/components/views/GV_Footer.tsx"
      ]
    }
  ],
  "database_tables": [
    "users",
    "villas",
    "villa_photos",
    "amenities",
    "villa_amenities",
    "villa_rules",
    "villa_calendar",
    "villa_pricing_overrides",
    "villa_wishlists",
    "wishlist_items",
    "bookings",
    "booking_histories",
    "booking_guests",
    "booking_payments",
    "message_threads",
    "messages",
    "user_reviews",
    "guest_reviews",
    "superhost_history",
    "notifications",
    "password_resets"
  ],
  "api_endpoints": [
    "/api/health",
    "/api/auth/signup",
    "/api/auth/login",
    "/api/auth/logout",
    "/api/auth/password-reset",
    "/api/users/profile",
    "/api/villas/search",
    "/api/villas/featured",
    "/api/villas/popular-locations",
    "/api/villas/:id",
    "/api/villas/:id/reviews",
    "/api/bookings",
    "/api/bookings/:id",
    "/api/messaging/threads",
    "/api/messaging/threads/:id/messages",
    "/api/wishlists",
    "/api/wishlists/:id/items",
    "/api/notifications",
    "/api/reviews"
  ],
  "key_libraries": {
    "frontend": {
      "ui_components": "@radix-ui/react-*",
      "styling": "tailwindcss",
      "state_management": "zustand",
      "data_fetching": "@tanstack/react-query",
      "routing": "react-router-dom",
      "forms": "react-hook-form",
      "validation": "zod",
      "icons": "lucide-react, react-icons",
      "animations": "framer-motion",
      "realtime": "socket.io-client"
    },
    "backend": {
      "framework": "express",
      "database": "pg (PostgreSQL)",
      "authentication": "jsonwebtoken, bcryptjs",
      "validation": "zod",
      "realtime": "socket.io",
      "utilities": "nanoid, date-fns"
    }
  },
  "architecture_notes": {
    "frontend_pattern": "Component-based React SPA with centralized state management",
    "backend_pattern": "RESTful API with real-time WebSocket support",
    "database_design": "Relational PostgreSQL with string-based IDs and comprehensive foreign key relationships",
    "authentication": "JWT-based stateless authentication with persistent sessions",
    "real_time": "Socket.IO for live messaging and notifications",
    "file_structure": "Feature-based organization with clear separation of concerns"
  }
}
