{
  "meta": {
    "project": "BeachStay Villas Backend and Frontend",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "BeachStay Villas is a comprehensive web platform for beach villa bookings, hosting, and management, featuring user authentication, villa browsing, booking, messaging, reviews, and personalized dashboards for guests and hosts.",
  "core_goals": [
    "Provide a secure and seamless authentication and account management system.",
    "Enable searching, filtering, and viewing detailed listings of beach villas with rich multimedia and amenities.",
    "Support hosts in villa management through creation, editing, calendar and pricing override controls.",
    "Implement an end-to-end booking process including availability checks, booking creation, and status updates.",
    "Facilitate real-time communication between guests and hosts through messaging threads and notifications.",
    "Allow users to manage wishlists for organizing favorite villas.",
    "Enable guests and hosts to submit and manage reviews bidirectionally.",
    "Provide robust dashboard views tailored to guest and host roles with relevant data and controls.",
    "Ensure consistent, scalable, and secure backend operations with RESTful APIs, real-time websocket events, and proper database schema enforcement."
  ],
  "key_features": [
    "Complete user authentication system with login, signup, password resets, and JWT-based authorization.",
    "Villa browsing, filtering, detailed views, featured listings, and multi-criteria search functionality.",
    "Host villa onboarding wizard and full villa CRUD with photo, amenities, rules, calendar, and pricing override support.",
    "Booking system with date availability validation, price simulation, guest details, booking status management, and cancellation.",
    "Real-time messaging with threads, unread counts, and websocket push notifications.",
    "Two-way review system allowing guests and hosts to leave, edit, and delete reviews.",
    "User wishlists with CRUD operations and multi-list support.",
    "Personalized dashboards for guests and hosts showing reservations, profile editing, revenue summary, and notifications.",
    "RESTful API with full resource coverage and websocket events for messaging and notifications.",
    "Comprehensive UI components supporting a responsive layout and consistent design."
  ],
  "user_flow_summary": [
    "Visitors browse and search villas without authentication and view villa details.",
    "Guests create accounts or log in, then search villas, save favorites to wishlists, and initiate bookings.",
    "Hosts sign up, onboard new villas via a step wizard, manage listings, calendars, pricing, and view reservations.",
    "Guests and hosts communicate in real-time through message threads, receive notifications for bookings and messages.",
    "Guests and hosts submit, edit, and view reviews for stays via their dashboards.",
    "Users manage their profiles, wishlists, bookings, and notifications through dedicated dashboard pages.",
    "All data actions through REST API accompanied by websocket events for instant updates on messaging and notifications."
  ],
  "validation_criteria": [
    "All REST API endpoints comply with resource ownership and JWT authorization.",
    "Schema validation is enforced for all inputs and updates using Zod.",
    "Date availability and pricing calculations for bookings accurately match calendar and override tables.",
    "Real-time messaging delivers events reliably with read/unread state synchronization.",
    "CRUD operations on villas, wishlists, bookings, reviews, and profiles perform atomic, consistent updates.",
    "UI routes render expected views with necessary data reflecting current user authorization and state.",
    "Notifications update and display unread counts correctly and support read/unread marking.",
    "Error states including 404 pages and fallback UI are displayed appropriately across the app.",
    "Password reset flows successfully generate and verify reset codes as per the backend specification.",
    "Hosts can approve, reject, or cancel bookings with state changes logged and communicated in real-time."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 18",
      "Vite",
      "Node.js",
      "Express",
      "PostgreSQL",
      "Socket.IO",
      "Zustand",
      "React Query",
      "React Router DOM",
      "Tailwind CSS",
      "Radix UI",
      "Zod",
      "JWT",
      "bcryptjs",
      "Axios"
    ],
    "features": [
      {
        "name": "User Authentication",
        "description": "Complete authentication system with login, signup, password reset for both guests and hosts",
        "files": [
          "vitereact/src/components/views/UV_GuestLogin.tsx",
          "vitereact/src/components/views/UV_GuestSignup.tsx",
          "vitereact/src/components/views/UV_HostSignup.tsx",
          "vitereact/src/components/views/UV_PasswordReset.tsx",
          "backend/server.ts"
        ]
      },
      {
        "name": "Villa Management",
        "description": "Complete villa listing system with CRUD operations, photos, amenities, and pricing",
        "files": [
          "vitereact/src/components/views/UV_HostOnboardingWizard.tsx",
          "vitereact/src/components/views/UV_HostVillaDetail.tsx",
          "vitereact/src/components/views/UV_VillaDetails.tsx",
          "backend/schema.ts"
        ]
      },
      {
        "name": "Search and Discovery",
        "description": "Villa search functionality with filters, location-based search, and featured listings",
        "files": [
          "vitereact/src/components/views/UV_Homepage.tsx",
          "vitereact/src/components/views/UV_SearchResults.tsx",
          "backend/server.ts"
        ]
      },
      {
        "name": "Booking System",
        "description": "End-to-end booking flow with date selection, guest management, payment simulation",
        "files": [
          "vitereact/src/components/views/UV_BookingStart.tsx",
          "vitereact/src/components/views/UV_BookingConfirmation.tsx",
          "vitereact/src/components/views/UV_BookingFailure.tsx",
          "vitereact/src/components/views/UV_MyTrips.tsx",
          "vitereact/src/components/views/UV_HostReservations.tsx",
          "vitereact/src/components/views/UV_ReservationDetail.tsx"
        ]
      },
      {
        "name": "Messaging System",
        "description": "Real-time messaging between guests and hosts with thread management",
        "files": [
          "vitereact/src/components/views/UV_MessagingInbox.tsx",
          "vitereact/src/components/views/UV_MessagingThread.tsx",
          "backend/server.ts"
        ]
      },
      {
        "name": "Review System",
        "description": "Two-way review system for guests and hosts with rating and text reviews",
        "files": [
          "vitereact/src/components/views/UV_LeaveReview.tsx",
          "vitereact/src/components/views/UV_ReviewEdit.tsx",
          "backend/schema.ts"
        ]
      },
      {
        "name": "Wishlist Management",
        "description": "User wishlist functionality to save and organize favorite villas",
        "files": [
          "vitereact/src/components/views/UV_Wishlists.tsx",
          "backend/schema.ts"
        ]
      },
      {
        "name": "Dashboard Systems",
        "description": "Separate dashboards for guests and hosts with personalized content and management tools",
        "files": [
          "vitereact/src/components/views/UV_GuestDashboard.tsx",
          "vitereact/src/components/views/UV_HostDashboard.tsx",
          "vitereact/src/components/views/UV_GuestProfileEdit.tsx",
          "vitereact/src/components/views/UV_HostProfileEdit.tsx"
        ]
      },
      {
        "name": "State Management",
        "description": "Global state management using Zustand with persistence and real-time updates",
        "files": [
          "vitereact/src/store/main.tsx",
          "vitereact/src/stores/userSession.ts"
        ]
      },
      {
        "name": "Real-time Notifications",
        "description": "Socket.IO based real-time notifications for bookings, messages, and updates",
        "files": [
          "vitereact/src/components/views/GV_NotificationBar.tsx",
          "vitereact/src/store/main.tsx",
          "backend/server.ts"
        ]
      },
      {
        "name": "Navigation and Layout",
        "description": "Responsive navigation system with top navigation, footer, and routing",
        "files": [
          "vitereact/src/components/views/GV_TopNav.tsx",
          "vitereact/src/components/views/GV_Footer.tsx",
          "vitereact/src/App.tsx",
          "vitereact/src/AppWrapper.tsx"
        ]
      },
      {
        "name": "Database Schema",
        "description": "Comprehensive PostgreSQL database schema with all entities and relationships",
        "files": [
          "backend/db.sql",
          "backend/schema.ts",
          "backend/initdb.js"
        ]
      },
      {
        "name": "API Layer",
        "description": "RESTful API with Express.js serving all frontend operations with JWT auth",
        "files": [
          "backend/server.ts",
          "backend/openapi.yaml",
          "backend/asyncapi.yaml"
        ]
      },
      {
        "name": "UI Components",
        "description": "Comprehensive set of reusable UI components built with Radix UI and Tailwind CSS",
        "files": [
          "vitereact/src/components/ui/button.tsx",
          "vitereact/src/components/ui/card.tsx",
          "vitereact/src/components/ui/input.tsx",
          "vitereact/src/components/ui/form.tsx",
          "vitereact/src/components/ui/toast.tsx",
          "vitereact/src/components/ui/tabs.tsx",
          "vitereact/src/components/ui/calendar.tsx",
          "vitereact/src/components/ui/select.tsx",
          "vitereact/src/components/ui/textarea.tsx",
          "vitereact/src/components/ui/checkbox.tsx",
          "vitereact/src/components/ui/avatar.tsx",
          "vitereact/src/components/ui/badge.tsx",
          "vitereact/src/components/ui/separator.tsx",
          "vitereact/src/components/ui/sheet.tsx",
          "vitereact/src/components/ui/dropdown-menu.tsx"
        ]
      },
      {
        "name": "Error Handling",
        "description": "Comprehensive error handling with 404 pages, error states, and fallback UI",
        "files": [
          "vitereact/src/components/views/UV_404NotFound.tsx",
          "vitereact/src/components/views/UV_ErrorState.tsx",
          "vitereact/src/App.tsx"
        ]
      },
      {
        "name": "Legal and Policy",
        "description": "Legal pages for terms of service, privacy policy, and other compliance documents",
        "files": [
          "vitereact/src/components/views/UV_LegalPolicy.tsx"
        ]
      }
    ]
  }
}
